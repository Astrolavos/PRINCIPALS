#!/bin/bash

VM1_name="alice-test"
VM2_name="malice-test"
monitoring1_name="monitor-generic"

ANTREA_POD=$(minikube -p gt-cluster kubectl -- -n kube-system get po | grep antrea-agent- | cut -d" " -f1)
echo "Antrea pod name=${ANTREA_POD}"
ANTREA_COMMAND="minikube -p gt-cluster kubectl -- -n kube-system exec -it ${ANTREA_POD} -c antrea-agent --"

# create all the necessary containers
echo "Starting VM1..."
minikube -p gt-cluster kubectl -- create -f VM1/generic-node.yaml 
echo "Starting VM2..."
minikube -p gt-cluster kubectl -- create -f VM2/generic-node.yaml 
echo "Starting monitoring VM..."
eval $(minikube -p gt-cluster docker-env) 
docker build -f /home/thomas/PRINCIPALS/gt/demos/demo-feb22/actors/monitor-generic/Dockerfile -t mitm-image .
minikube -p gt-cluster kubectl -- apply -f monitor-generic/monitoring-role.yaml 
minikube -p gt-cluster kubectl -- create -f monitor-generic/monitor-generic.yaml 
echo "Building mitm container for later.."
docker build -f /home/thomas/PRINCIPALS/gt/demos/demo-feb22/actors/monitor-specific/Dockerfile -t mitm-image-2 .


# enable outgoing traffic mirroring
sleep 10 # wait a bit for pods to start
VM1_inport=$(${ANTREA_COMMAND} antctl get podinterface ${VM1_name} | tail -n 1 | awk -F ' ' '{ print $3 }')
VM2_inport=$(${ANTREA_COMMAND} antctl get podinterface ${VM2_name} | tail -n 1 | awk -F ' ' '{ print $3 }')
monitoring1_inport=$(${ANTREA_COMMAND} antctl get podinterface ${monitoring1_name} | tail -n 1 | awk -F ' ' '{ print $3 }')

echo "in-port for ${VM1_name} -> ${VM1_inport}"
echo "in-port for ${VM2_name} -> ${VM2_inport}"
echo "in-port for ${monitoring1_name} -> ${monitoring1_inport}"

${ANTREA_COMMAND} ovs-ofctl mod-flows br-int table=10,ip,in_port="${VM1_inport},actions=resubmit(,29),output:${monitoring1_inport}"
${ANTREA_COMMAND} ovs-ofctl mod-flows br-int table=10,ip,in_port="${VM2_inport},actions=resubmit(,29),output:${monitoring1_inport}"
