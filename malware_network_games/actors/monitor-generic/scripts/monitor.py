from scapy.all import *
import tldextract
import argparse
import logging
import yaml
import subprocess

interface = 'eth0'
ETH_SRC=Ether().src

conf = {"bpf": "", "targetip":"" }
counter = 0 # to avoid multiple files with the same name
monitored_set=set([])

def modify_yaml_spawn(pod_ip):
    global counter
    with open("monitor-template.yaml","r") as f:
        template = yaml.safe_load(f)
    name=f"monitor-sp-{counter}"
    template["metadata"]["name"]=name
    with open(f"{name}.yaml","w") as f:
        yaml.dump(template,f)
    counter += 1
    subprocess.run(["./pod_spawn.sh", name, pod_ip])            

def monitor(p):
    if p.haslayer(IP):
        if p[IP].dst == conf["targetip"] and p[IP].src not in monitored_set:
            pod_ip = p[IP].src
            print(f"pod {pod_ip} contacted IP {p[IP].dst}")
            modify_yaml_spawn(pod_ip)
            monitored_set.add(pod_ip)
            exit(1)

def argument_parsing():
    parser = argparse.ArgumentParser(description='Simple monitoring pod implementation')
    requiredNamed = parser.add_argument_group('required arguments')
    requiredNamed.add_argument('--targetip', type=str, help='IP to look for', required=True)
    args = parser.parse_args()

    conf["targetip"] = f"{args.targetip}"
    print(conf)

if __name__ == "__main__":
    argument_parsing()
    print(f"Starting capturing on interface {interface} with packet filter \"{conf['bpf']}\"")
    sniff(iface=interface, filter=conf["bpf"], store=0,  prn=monitor)
