set -x

TARGET="coastalbrezecarwash.com"
BLOCKFILE="/home/kevinv/PRINCIPALS/gt/vm_management/blocklist2"
f="/home/kevinv/malware_folder/bazarloader/8e244f1a5b4653d6dbb4cc3978c7dd773b227a443361fbc30265b79f102f7eed.exe"
DUMMY_FILE="/home/kevinv/malware_folder/fake-malware.bat"
BASENAME=$(basename $f)
IDENTIFIER=${BASENAME:0:5}

# Start the VMs
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-1  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-2  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-3  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-4  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-5  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $f -i host-6  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-7  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-8  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-9  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-a  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $f -i host-b  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-c  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-d  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-e  &
/home/kevinv/PRINCIPALS/gt/vm_management/create_malware_vm.sh -s $DUMMY_FILE -i host-f  &

sleep 60

kubectl wait --for=condition=ready vm "win10vm-host-1" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-2" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-3" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-4" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-5" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-6" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-7" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-8" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-9" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-a" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-b" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-f" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-c" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-d" --timeout=90s
kubectl wait --for=condition=ready vm "win10vm-host-e" --timeout=90s

# Create monitor
./create_monitor.sh "gateway-1"
MONITOR1_CONTAINER="gateway-1-monitor"
./create_monitor.sh "gateway-2"
MONITOR2_CONTAINER="gateway-2-monitor"
./create_monitor.sh "gateway-3"
MONITOR3_CONTAINER="gateway-3-monitor"
./create_monitor.sh "router"
TOPMONITOR_CONTAINER="router-monitor"

kubectl wait --for=condition=ready pod "gateway-1-monitor" --timeout=30s
kubectl wait --for=condition=ready pod "gateway-2-monitor" --timeout=10s
kubectl wait --for=condition=ready pod "gateway-3-monitor" --timeout=10s
kubectl wait --for=condition=ready pod "router-monitor" --timeout=10s

# Remember that capital letters don't work, either in redirection or creating the nodes in the first place.
LIST1="1 2 3 4 5"
for i in $LIST1; do
  /home/kevinv/PRINCIPALS/gt/vm_management/redirect_traffic.sh virt-launcher-win10vm-host-$i $MONITOR1_CONTAINER  
done

LIST2="6 7 8 9 a"
for i in $LIST2; do
  /home/kevinv/PRINCIPALS/gt/vm_management/redirect_traffic.sh virt-launcher-win10vm-host-$i $MONITOR2_CONTAINER
done

LIST3="b c d e f"
for i in $LIST3; do
  /home/kevinv/PRINCIPALS/gt/vm_management/redirect_traffic.sh virt-launcher-win10vm-host-$i $MONITOR3_CONTAINER  
done

LISTALL="1 2 3 4 5 6 7 8 9 a b c d e f"
for i in $LISTALL; do
  /home/kevinv/PRINCIPALS/gt/vm_management/redirect_traffic.sh virt-launcher-win10vm-host-$i $TOPMONITOR_CONTAINER
done

# Connect all the vms to the monitor
# /home/kevinv/PRINCIPALS/gt/vm_management/redirect_traffic.sh virt-launcher-win10vm-$IDENTIFIER $MONITOR_CONTAINER
# /home/kevinv/PRINCIPALS/gt/vm_management/redirect_traffic.sh virt-launcher-win10vm-benign-1 $MONITOR_CONTAINER
# /home/kevinv/PRINCIPALS/gt/vm_management/redirect_traffic.sh virt-launcher-win10vm-benign-2 $MONITOR_CONTAINER

# virtctl unpause vm win10vm-benign-2
# virtctl unpause vm win10vm-benign-1
# virtctl unpause vm win10vm-$IDENTIFIER

# if [ "$1" != "mitm" ]; then
#     echo "To view the latest domains, use 'kubectl cp default/$MONITOR_CONTAINER:/malware_$IDENTIFIER.pcap malware_$IDENTIFIER.pcap'"
#     echo "  To remove benign domains  use '/home/kevinv/PRINCIPALS/gt/vm_management/diff_domains.sh malware_$IDENTIFIER.pcap'"
#     exit
# fi

# Keep copying until the target domain is identified 
echo " * Checking for target"
while ! tshark -r malware_$IDENTIFIER.pcap -Y dns | grep -q $TARGET
do
  kubectl cp default/$MONITOR_CONTAINER:/malware_generic.pcap malware_$IDENTIFIER.pcap
  echo "  * Checking again"
done
echo " * Found target domain"

# # Now to pull up the mitm 
# cp $BLOCKFILE /home/thomas/v-mitm-test/scripts/blockfile
# # pull up the mitm
# VM_IP=$(kubectl get pod -owide | grep win10vm-$IDENTIFIER | tr -s ' ' | cut -d' ' -f 6 )
# echo " * Pulling up mitm pod mitm-$IDENTIFIER monitoring $VM_IP"
# MITM_CONTAINER=mitm-$IDENTIFIER
# /home/thomas/v-mitm-test/pod_spawn.sh $MITM_CONTAINER $VM_IP v-mitm-test/scripts # You must be running as Thomas

# Now watch the new mitm
# watch "kubectl cp default/$MONITOR_CONTAINER:/malware.pcap malware.pcap; /home/kevinv/PRINCIPALS/gt/vm_management/diff_domains.sh malware.pcap 
