import kubevirt
import requests


def main():
    has_quarantined = False
    while True:
        try:
            nodes = kubevirt.get_nodes(force_update=True)
            node_names = [node['pod_name'] for node in nodes['mitm'] + nodes['monitor']]
            processes = [kubevirt.copy_traffic_file(pod_name) for pod_name in node_names ]
            for p in processes:
                p.wait()
            print(f"Collceted files for: {node_names}")

            for node in nodes['mitm'] + nodes['monitor']:
                url = 'http://127.0.0.1:5002/get_node_details'
                myobj = {'pod_name': node['pod_name']}

                x = requests.post(url, data = myobj)

                if x.json().get('auto_quarantine_enabled', False) and not has_quarantined:
                    malicious_domains = kubevirt.pull_malicious_domains(node['pod_name'])
                    if malicious_domains and len(malicious_domains) > 0:
                        print("Quarantine triggered!")
                        # Time to start auto-quarantine!!!!
                        has_quarantined = True
                        kubevirt.quarantine(node['pod_name'], {x['src_ip'] for x in malicious_domains})
                        

        except Exception as e:
            print(f"Error: {e}")

if __name__ == "__main__":
    main()